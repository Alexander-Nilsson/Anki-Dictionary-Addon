name: Release

on:
  release:
    types: [published]

env:
  PYTHON_VERSION: '3.13'

jobs:
  wait-for-tests:
    name: Wait for Tests to Complete
    runs-on: ubuntu-latest
    steps:
    - name: Wait for test workflows
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
        ref: ${{ github.event.release.tag_name }}
        check-name: 'Run Tests'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 30

  release:
    name: Create Release Assets
    runs-on: ubuntu-latest
    needs: wait-for-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install build dependencies
      run: |
        pip install build wheel setuptools
        
    - name: Create build script
      run: |
        cat > build_addon.py << 'EOF'
        #!/usr/bin/env python3
        """
        Build script for Anki Dictionary Addon
        """
        import os
        import shutil
        import zipfile
        import json
        from pathlib import Path
        
        def create_addon_package():
            """Create .ankiaddon package"""
            print("🔧 Building Anki addon package...")
            
            # Create build directory
            build_dir = Path('build')
            addon_dir = build_dir / 'anki_dictionary_addon'
            
            if build_dir.exists():
                shutil.rmtree(build_dir)
            addon_dir.mkdir(parents=True)
            
            # Files/directories to include in addon
            include_items = [
                '__init__.py',
                'main.py',
                'config.json',
                'manifest.json',
                'miutils.py',
                'dictdb.py', 
                'dictionaryManager.py',
                'launch_dictionary.py',
                'miUpdater.py',
                'miflix.py',
                'ffmpegInstaller.py',
                'icons/',
                'js/',
                'user_files/',
                'vendor/',
                '*.html',
                '*.css'
            ]
            
            # Copy files to addon directory
            for item in include_items:
                if item.endswith('/'):
                    # Directory
                    src_dir = Path(item)
                    if src_dir.exists():
                        shutil.copytree(src_dir, addon_dir / src_dir.name)
                        print(f"   ✓ Copied directory: {item}")
                elif '*' in item:
                    # Glob pattern
                    import glob
                    for file_path in glob.glob(item):
                        if os.path.isfile(file_path):
                            shutil.copy2(file_path, addon_dir / os.path.basename(file_path))
                            print(f"   ✓ Copied file: {file_path}")
                else:
                    # Single file
                    src_file = Path(item)
                    if src_file.exists():
                        shutil.copy2(src_file, addon_dir / src_file.name)
                        print(f"   ✓ Copied file: {item}")
                    else:
                        print(f"   ⚠️  Skipped missing: {item}")
            
            # Create .ankiaddon file
            addon_zip = build_dir / 'anki_dictionary_addon.ankiaddon'
            with zipfile.ZipFile(addon_zip, 'w', zipfile.ZIP_DEFLATED) as zf:
                for root, dirs, files in os.walk(addon_dir):
                    for file in files:
                        file_path = Path(root) / file
                        arc_path = file_path.relative_to(addon_dir)
                        zf.write(file_path, arc_path)
            
            print(f"✅ Addon package created: {addon_zip}")
            return addon_zip
        
        if __name__ == '__main__':
            create_addon_package()
            print("🎉 Build completed successfully!")
        EOF
        
    - name: Build release packages
      run: |
        python build_addon.py
        
    - name: Get version and release info
      id: release_info
      run: |
        # Extract version from git tag (remove 'v' prefix if present)
        TAG_VERSION="${{ github.event.release.tag_name }}"
        VERSION="${TAG_VERSION#v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Find built files
        ANKIADDON_FILE=$(find build/ -name "*.ankiaddon" -type f | head -n1)
        echo "ankiaddon_file=$ANKIADDON_FILE" >> $GITHUB_OUTPUT
        
        echo "Found files:"
        echo "  Addon: $ANKIADDON_FILE"
        
    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << EOF
        ## Anki Dictionary Addon v${{ steps.release_info.outputs.version }}
        
        ✅ **Tested and verified on:**
        - Ubuntu Latest
        - Windows Latest  
        - macOS Latest
        
        ### Installation Options
        
        **🎯 For Anki Users:**
        1. Download the \`.ankiaddon\` file below
        2. Double-click the file to install in Anki
        3. Restart Anki
        4. The addon will be available in your Tools menu
        
        ### Features in this Release
        - Dictionary lookup functionality
        - Multi-language support
        - Image search integration
        - Audio pronunciation support
        - Customizable themes
        - Export capabilities
        
        ### System Requirements
        - **For Anki addon**: Anki 24.11+
        
        ### Quality Assurance
        This release has passed:
        - ✅ Unit tests and code quality checks
        - ✅ Cross-platform integration tests
        - ✅ Real Anki installation verification
        - ✅ Addon functionality validation
        
        ### Support
        - 🐛 Report issues: [GitHub Issues](https://github.com/Alexander-Nilsson/Anki-Dictionary-Addon/issues)
        - 📖 Documentation: [README](https://github.com/Alexander-Nilsson/Anki-Dictionary-Addon/blob/main/README.md)
        
        ---
        
        **Full Changelog**: https://github.com/Alexander-Nilsson/Anki-Dictionary-Addon/compare/v${{ github.event.release.tag_name }}...v${{ steps.release_info.outputs.version }}
        EOF
        
        echo "release_notes<<EOF" >> $GITHUB_OUTPUT
        cat release_notes.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.release_info.outputs.ankiaddon_file }}
        body: ${{ steps.release_notes.outputs.release_notes }}
        tag_name: ${{ github.event.release.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload build artifacts for archival
      uses: actions/upload-artifact@v4
      with:
        name: release-anki-dictionary-addon-v${{ steps.release_info.outputs.version }}
        path: |
          build/*
        retention-days: 90
