name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PYTHON_VERSION: '3.13'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      
    - name: Install dependencies
      run: |
        # Install system dependencies that might be needed
        sudo apt-get update
        sudo apt-get install -y xvfb
        
        # Install Python dependencies
        uv sync --dev || true
        uv pip install pytest pytest-cov flake8 black mypy || pip install pytest pytest-cov flake8 black mypy
        
    - name: Lint code with flake8
      run: |
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        
    - name: Check code formatting with black
      run: |
        uv run black --check --diff . || echo "Code formatting issues found - consider running 'black .'"
        
    - name: Type check with mypy (optional)
      continue-on-error: true
      run: |
        uv run mypy . --ignore-missing-imports || echo "Type checking completed with warnings"
        

    - name: Build addon packages
      run: |
        python build.py all

    - name: Test built addon structuxre
      run: |
        python -c "
        import os
        import sys
        from pathlib import Path
        
        print('🔍 Checking built addon structure...')
        build_dir = Path('build/anki_dictionary_addon')
        required_files = ['__init__.py', 'manifest.json', 'config.json']
        missing_files = []
        
        for file in required_files:
            if not (build_dir / file).exists():
                missing_files.append(file)
        
        if missing_files:
            print(f'❌ Missing required files in built addon: {missing_files}')
            sys.exit(1)
        else:
            print('✅ All required addon files present in build')
        
        # Check if main components can be imported
        try:
            sys.path.insert(0, str(build_dir))
            import main
            print('✅ Main module imports successfully from build')
        except Exception as e:
            print(f'⚠️  Main module import warning (from build): {e}')
        "
        
    - name: Run test suite
      run: |
        # Use xvfb for headless GUI testing
        xvfb-run -a python tests/run_tests.py || python tests/run_tests.py

  build:
    name: Build Addon
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install build dependencies
      run: |
        pip install build wheel setuptools
        
    - name: Get version from pyproject.toml
      id: version
      run: |
        VERSION=$(python -c "
        import tomllib
        with open('pyproject.toml', 'rb') as f:
            config = tomllib.load(f)
        print(config['project']['version'])
        " 2>/dev/null || python -c "
        import toml
        with open('pyproject.toml', 'r') as f:
            config = toml.load(f)
        print(config['project']['version'])
        " 2>/dev/null || echo "1.0.0")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version detected: $VERSION"
        
    - name: Build addon packages
      run: |
        python build.py package
        
    - name: List build artifacts
      run: |
        echo "📦 Build artifacts:"
        ls -la build/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: anki-dictionary-addon-v${{ steps.version.outputs.version }}
        path: |
          build/*.ankiaddon
          build/*.zip
        retention-days: 30
